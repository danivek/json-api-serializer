{"version":3,"file":"json-api-serializer.min.js","sources":["../node_modules/setimmediate/setImmediate.js","../node_modules/lodash.set/index.js","../lib/lru-cache.js","../lib/helpers.js","../lib/validator.js","../lib/JSONAPISerializer.js"],"sourcesContent":["(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6â€“8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    object[key] = value;\n  }\n}\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nmodule.exports = set;\n","/* eslint-disable */\n\n// Influenced by http://jsfiddle.net/2baax9nk/5/\n\nclass Node {\n  constructor(key, data) {\n    this.key = key;\n    this.data = data;\n    this.previous = null;\n    this.next = null;\n  }\n}\n\nmodule.exports = class LRU {\n  constructor(capacity) {\n    this.capacity = capacity === 0 ? Infinity : capacity;\n    this.map = {};\n    this.head = null;\n    this.tail = null;\n  }\n\n  get(key) {\n    // Existing item\n    if (this.map[key] !== undefined) {\n      // Move to the first place\n      const node = this.map[key];\n      this._moveFirst(node);\n\n      // Return\n      return node.data;\n    }\n\n    // Not found\n    return undefined;\n  }\n\n  set(key, value) {\n    // Existing item\n    if (this.map[key] !== undefined) {\n      // Move to the first place\n      const node = this.map[key];\n      node.data = value;\n      this._moveFirst(node);\n      return;\n    }\n\n    // Ensuring the cache is within capacity\n    if (Object.keys(this.map).length >= this.capacity) {\n      const id = this.tail.key;\n      this._removeLast();\n      delete this.map[id];\n    }\n\n    // New Item\n    const node = new Node(key, value);\n    this._add(node);\n    this.map[key] = node;\n  }\n\n  _add(node) {\n    node.next = null;\n    node.previous = node.next;\n\n    // first item\n    if (this.head === null) {\n      this.head = node;\n      this.tail = node;\n    } else {\n      // adding to existing items\n      this.head.previous = node;\n      node.next = this.head;\n      this.head = node;\n    }\n  }\n\n  _remove(node) {\n    // only item in the cache\n    if (this.head === node && this.tail === node) {\n      this.tail = null;\n      this.head = this.tail;\n      return;\n    }\n\n    // remove from head\n    if (this.head === node) {\n      this.head.next.previous = null;\n      this.head = this.head.next;\n      return;\n    }\n\n    // remove from tail\n    if (this.tail === node) {\n      this.tail.previous.next = null;\n      this.tail = this.tail.previous;\n      return;\n    }\n\n    // remove from middle\n    node.previous.next = node.next;\n    node.next.previous = node.previous;\n  }\n\n  _moveFirst(node) {\n    this._remove(node);\n    this._add(node);\n  }\n\n  _removeLast() {\n    this._remove(this.tail);\n  }\n};\n","/* eslint-disable no-sequences */\n/* eslint-disable no-return-assign */\n\nconst set = require('lodash.set');\nconst LRU = require('./lru-cache');\n\n// https://github.com/you-dont-need/You-Dont-Need-Lodash-Underscore#_get\nconst get = (obj, path, defaultValue) => {\n  const result = String.prototype.split\n    .call(path, /[,[\\].]+?/)\n    .filter(Boolean)\n    .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj);\n  return result === undefined || result === obj ? defaultValue : result;\n};\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/pick.md\nconst pick = (obj, arr) =>\n  arr.reduce((acc, curr) => (curr in obj && (acc[curr] = obj[curr]), acc), {});\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/isEmpty.md\nconst isEmpty = (val) => val == null || !(Object.keys(val) || val).length;\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/omit.md\nconst omit = (obj, arr) =>\n  Object.keys(obj)\n    .filter((k) => !arr.includes(k))\n    .reduce((acc, key) => ((acc[key] = obj[key]), acc), {});\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/isObjectLike.md\nconst isObjectLike = (val) => val !== null && typeof val === 'object';\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/isPlainObject.md\nconst isPlainObject = (val) => !!val && typeof val === 'object' && val.constructor === Object;\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/transform.md\nconst transform = (obj, fn, acc) => Object.keys(obj).reduce((a, k) => fn(a, obj[k], k, obj), acc);\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/toKebabCase.md\nconst toKebabCase = (str) =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('-');\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/toSnakeCase.md\nconst toSnakeCase = (str) =>\n  str &&\n  str\n    .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n    .map((x) => x.toLowerCase())\n    .join('_');\n\n// https://github.com/30-seconds/30-seconds-of-code/blob/master/snippets/toCamelCase.md\nconst toCamelCase = (str) => {\n  const s =\n    str &&\n    str\n      .match(/[A-Z]{2,}(?=[A-Z][a-z]+[0-9]*|\\b)|[A-Z]?[a-z]+[0-9]*|[A-Z]|[0-9]+/g)\n      .map((x) => x.slice(0, 1).toUpperCase() + x.slice(1).toLowerCase())\n      .join('');\n  return s.slice(0, 1).toLowerCase() + s.slice(1);\n};\n\nmodule.exports = {\n  get,\n  set,\n  pick,\n  isEmpty,\n  omit,\n  isPlainObject,\n  isObjectLike,\n  transform,\n  toKebabCase,\n  toSnakeCase,\n  toCamelCase,\n  LRU,\n};\n","/**\n * Validate and apply default values to resource's configuration options.\n *\n * @function validateOptions\n * @private\n * @param {object} options Configuration options.\n * @returns {object} valid configuration options.\n */\nfunction validateOptions(options) {\n  options = {\n    id: 'id',\n    blacklist: [],\n    whitelist: [],\n    links: {},\n    relationships: {},\n    topLevelLinks: {},\n    topLevelMeta: {},\n    meta: {},\n    blacklistOnDeserialize: [],\n    whitelistOnDeserialize: [],\n    jsonapiObject: true,\n    ...options,\n  };\n\n  if (!Array.isArray(options.blacklist)) throw new Error(\"option 'blacklist' must be an array\");\n  if (!Array.isArray(options.whitelist)) throw new Error(\"option 'whitelist' must be an array\");\n  if (typeof options.links !== 'object' && typeof options.links !== 'function')\n    throw new Error(\"option 'links' must be an object or a function\");\n  if (!Array.isArray(options.blacklistOnDeserialize))\n    throw new Error(\"option 'blacklistOnDeserialize' must be an array\");\n  if (!Array.isArray(options.whitelistOnDeserialize))\n    throw new Error(\"option 'whitelistOnDeserialize' must be an array\");\n  if (\n    options.topLevelLinks &&\n    typeof options.topLevelLinks !== 'object' &&\n    typeof options.topLevelLinks !== 'function'\n  )\n    throw new Error(\"option 'topLevelLinks' must be an object or a function\");\n  if (\n    options.topLevelMeta &&\n    typeof options.topLevelMeta !== 'object' &&\n    typeof options.topLevelMeta !== 'function'\n  )\n    throw new Error(\"option 'topLevelMeta' must be an object or a function\");\n  if (options.meta && typeof options.meta !== 'object' && typeof options.meta !== 'function')\n    throw new Error(\"option 'meta' must be an object or a function\");\n  if (typeof options.jsonapiObject !== 'boolean')\n    throw new Error(\"option 'jsonapiObject' must a boolean\");\n  if (\n    options.convertCase &&\n    !['kebab-case', 'snake_case', 'camelCase'].includes(options.convertCase)\n  )\n    throw new Error(\"option 'convertCase' must be one of 'kebab-case', 'snake_case', 'camelCase'\");\n\n  if (\n    options.unconvertCase &&\n    !['kebab-case', 'snake_case', 'camelCase'].includes(options.unconvertCase)\n  )\n    throw new Error(\n      \"option 'unconvertCase' must be one of 'kebab-case', 'snake_case', 'camelCase'\"\n    );\n\n  if (options.beforeSerialize && typeof options.beforeSerialize !== 'function')\n    throw new Error(\"option 'beforeSerialize' must be function\");\n\n  if (options.afterDeserialize && typeof options.afterDeserialize !== 'function')\n    throw new Error(\"option 'afterDeserialize' must be function\");\n\n  const { relationships } = options;\n  Object.keys(relationships).forEach((key) => {\n    relationships[key] = {\n      schema: 'default',\n      links: {},\n      meta: {},\n      ...relationships[key],\n    };\n\n    if (!relationships[key].type)\n      throw new Error(`option 'type' for relationship '${key}' is required`);\n    if (\n      typeof relationships[key].type !== 'string' &&\n      typeof relationships[key].type !== 'function'\n    )\n      throw new Error(`option 'type' for relationship '${key}' must be a string or a function`);\n    if (relationships[key].alternativeKey && typeof relationships[key].alternativeKey !== 'string')\n      throw new Error(`option 'alternativeKey' for relationship '${key}' must be a string`);\n\n    if (relationships[key].schema && typeof relationships[key].schema !== 'string')\n      throw new Error(`option 'schema' for relationship '${key}' must be a string`);\n\n    if (\n      typeof relationships[key].links !== 'object' &&\n      typeof relationships[key].links !== 'function'\n    )\n      throw new Error(`option 'links' for relationship '${key}' must be an object or a function`);\n\n    if (\n      typeof relationships[key].meta !== 'object' &&\n      typeof relationships[key].meta !== 'function'\n    )\n      throw new Error(`option 'meta' for relationship '${key}' must be an object or a function`);\n\n    if (relationships[key].deserialize && typeof relationships[key].deserialize !== 'function')\n      throw new Error(`option 'deserialize' for relationship '${key}' must be a function`);\n  });\n\n  return options;\n}\n\n/**\n * Validate and apply default values to the dynamic type object option.\n *\n * @function validateDynamicTypeOptions\n * @private\n * @param {object} options dynamic type object option.\n * @returns {object} valid dynamic type options.\n */\nfunction validateDynamicTypeOptions(options) {\n  options = { topLevelLinks: {}, topLevelMeta: {}, jsonapiObject: true, ...options };\n\n  if (!options.type) throw new Error(\"option 'type' is required\");\n  if (typeof options.type !== 'string' && typeof options.type !== 'function') {\n    throw new Error(\"option 'type' must be a string or a function\");\n  }\n\n  if (\n    options.topLevelLinks &&\n    typeof options.topLevelLinks !== 'object' &&\n    typeof options.topLevelLinks !== 'function'\n  )\n    throw new Error(\"option 'topLevelLinks' must be an object or a function\");\n  if (\n    options.topLevelMeta &&\n    typeof options.topLevelMeta !== 'object' &&\n    typeof options.topLevelMeta !== 'function'\n  )\n    throw new Error(\"option 'topLevelMeta' must be an object or a function\");\n  if (options.meta && typeof options.meta !== 'object' && typeof options.meta !== 'function')\n    throw new Error(\"option 'meta' must be an object or a function\");\n  if (typeof options.jsonapiObject !== 'boolean')\n    throw new Error(\"option 'jsonapiObject' must a boolean\");\n\n  return options;\n}\n\n/**\n * Validate a JSONAPI error object\n *\n * @function validateError\n * @private\n * @param {object} err a JSONAPI error object\n * @returns {object} JSONAPI  valid error object\n */\nfunction validateError(err) {\n  if (typeof err !== 'object') {\n    throw new Error('error must be an object');\n  }\n\n  const { id, links, status, code, title, detail, source, meta } = err;\n\n  const isValidLink = function isValidLink(linksObj) {\n    if (typeof linksObj !== 'object') {\n      throw new Error(\"error 'link' property must be an object\");\n    }\n\n    Object.keys(linksObj).forEach((key) => {\n      if (typeof linksObj[key] !== 'object' && typeof linksObj[key] !== 'string') {\n        throw new Error(`error 'links.${key}' must be a string or an object`);\n      }\n\n      if (typeof linksObj[key] === 'object') {\n        if (linksObj[key].href && typeof linksObj[key].href !== 'string') {\n          throw new Error(`'links.${key}.href' property must be a string`);\n        }\n\n        if (linksObj[key].meta && typeof linksObj[key].meta !== 'object') {\n          throw new Error(`'links.${key}.meta' property must be an object`);\n        }\n      }\n    });\n\n    return links;\n  };\n\n  const isValidSource = function isValidSource(sourceObj) {\n    if (typeof sourceObj !== 'object') {\n      throw new Error(\"error 'source' property must be an object\");\n    }\n\n    if (sourceObj.pointer && typeof sourceObj.pointer !== 'string') {\n      throw new Error(\"error 'source.pointer' property must be a string\");\n    }\n\n    if (sourceObj.parameter && typeof sourceObj.parameter !== 'string') {\n      throw new Error(\"error 'source.parameter' property must be a string\");\n    }\n\n    return source;\n  };\n\n  const error = {};\n  if (id) error.id = id.toString();\n  if (links) error.links = isValidLink(links);\n  if (status) error.status = status.toString();\n  if (code) error.code = code.toString();\n  if (title) error.title = title.toString();\n  if (detail) error.detail = detail.toString();\n  if (source) error.source = isValidSource(source);\n  if (meta) error.meta = meta;\n\n  return error;\n}\n\nmodule.exports = {\n  validateOptions,\n  validateDynamicTypeOptions,\n  validateError,\n};\n","require('setimmediate');\n\nconst {\n  pick,\n  isEmpty,\n  omit,\n  isPlainObject,\n  isObjectLike,\n  transform,\n  get,\n  set,\n  toCamelCase,\n  toKebabCase,\n  toSnakeCase,\n  LRU,\n} = require('./helpers');\n\nconst { validateOptions, validateDynamicTypeOptions, validateError } = require('./validator');\n\n/**\n * JSONAPISerializer class.\n *\n * @example\n * const JSONAPISerializer = require('json-api-serializer');\n *\n * // Create an instance of JSONAPISerializer with default settings\n * const serializer = new JSONAPISerializer();\n *\n * @class JSONAPISerializer\n * @param {object} [opts] Global options.\n */\nmodule.exports = class JSONAPISerializer {\n  constructor(opts) {\n    this.opts = opts || {};\n    this.schemas = {};\n\n    // Size of cache used for convertCase, 0 results in an infinitely sized cache\n    const { convertCaseCacheSize = 5000 } = this.opts;\n    // Cache of strings to convert to their converted values per conversion type\n    this.convertCaseMap = {\n      camelCase: new LRU(convertCaseCacheSize),\n      kebabCase: new LRU(convertCaseCacheSize),\n      snakeCase: new LRU(convertCaseCacheSize),\n    };\n  }\n\n  /**\n   * Register a resource with its type, schema name, and configuration options.\n   *\n   * @function JSONAPISerializer#register\n   * @param {string} type resource's type.\n   * @param {string|object} [schema='default'] schema name.\n   * @param {object} [options] options.\n   */\n  register(type, schema, options) {\n    if (typeof schema === 'object') {\n      options = schema;\n      schema = 'default';\n    }\n\n    schema = schema || 'default';\n    options = { ...this.opts, ...options };\n\n    this.schemas[type] = this.schemas[type] || {};\n    this.schemas[type][schema] = validateOptions(options);\n  }\n\n  /**\n   * Serialze input data to a JSON API compliant response.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-top-level}\n   * @function JSONAPISerializer#serialize\n   * @param {string|object} type resource's type as string or a dynamic type options as object.\n   * @param {object|object[]} data input data.\n   * @param {string|object} [schema='default'] resource's schema name.\n   * @param {object} [extraData] additional data that can be used in topLevelMeta options.\n   * @param {boolean} [excludeData] boolean that can be set to exclude the `data` property in serialized data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {object} serialized data.\n   */\n  serialize(type, data, schema, extraData, excludeData, overrideSchemaOptions = {}) {\n    // Support optional arguments (schema)\n    if (arguments.length === 3) {\n      if (typeof schema === 'object') {\n        extraData = schema;\n        schema = 'default';\n      }\n    }\n\n    schema = schema || 'default';\n    extraData = extraData || {};\n\n    const included = new Map();\n    const isDynamicType = typeof type === 'object';\n    let options;\n\n    if (isDynamicType) {\n      // Dynamic type option\n      options = validateDynamicTypeOptions(type);\n    } else {\n      // Serialize data with the defined type\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n\n      options = this.schemas[type][schema];\n    }\n\n    const overrideType = isDynamicType ? type.type : type;\n    if (overrideSchemaOptions[overrideType]) {\n      // Merge default (registered) options and extra options into new options object\n      options = { ...options, ...overrideSchemaOptions[overrideType] };\n    }\n\n    let dataProperty;\n\n    if (excludeData) {\n      dataProperty = undefined;\n    } else if (isDynamicType) {\n      dataProperty = this.serializeMixedResource(\n        options,\n        data,\n        included,\n        extraData,\n        overrideSchemaOptions\n      );\n    } else {\n      dataProperty = this.serializeResource(\n        type,\n        data,\n        options,\n        included,\n        extraData,\n        overrideSchemaOptions\n      );\n    }\n\n    return {\n      jsonapi: options.jsonapiObject ? { version: '1.0' } : undefined,\n      meta: this.processOptionsValues(data, extraData, options.topLevelMeta, 'extraData'),\n      links: this.processOptionsValues(data, extraData, options.topLevelLinks, 'extraData'),\n      data: dataProperty,\n      included: included.size ? [...included.values()] : undefined,\n    };\n  }\n\n  /**\n   * Asynchronously serialize input data to a JSON API compliant response.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-top-level}\n   * @function JSONAPISerializer#serializeAsync\n   * @param {string|object} type resource's type or an object with a dynamic type resolved from data..\n   * @param {object|object[]} data input data.\n   * @param {string} [schema='default'] resource's schema name.\n   * @param {object} [extraData] additional data that can be used in topLevelMeta options.\n   * @param {boolean} [excludeData] boolean that can be set to exclude the `data` property in serialized data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {Promise} resolves with serialized data.\n   */\n  serializeAsync(type, data, schema, extraData, excludeData, overrideSchemaOptions = {}) {\n    // Support optional arguments (schema)\n    if (arguments.length === 3) {\n      if (typeof schema === 'object') {\n        extraData = schema;\n        schema = 'default';\n      }\n    }\n\n    schema = schema || 'default';\n    extraData = extraData || {};\n\n    const included = new Map();\n    const isDataArray = Array.isArray(data);\n    const isDynamicType = typeof type === 'object';\n    const arrayData = isDataArray ? data : [data];\n    const serializedData = [];\n    const that = this;\n    let i = 0;\n    let options;\n\n    if (isDynamicType) {\n      options = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n\n      options = this.schemas[type][schema];\n    }\n\n    const overrideType = isDynamicType ? type.type : type;\n    if (overrideSchemaOptions[overrideType]) {\n      // Merge default (registered) options and extra options into new options object\n      options = { ...options, ...overrideSchemaOptions[overrideType] };\n    }\n\n    return new Promise((resolve, reject) => {\n      /**\n       * Non-blocking serialization using the immediate queue.\n       *\n       * @see {@link https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/}\n       */\n      function next() {\n        setImmediate(() => {\n          if (excludeData) {\n            return resolve();\n          }\n          if (i >= arrayData.length) {\n            return resolve(serializedData);\n          }\n\n          try {\n            // Serialize a single item of the data-array.\n            const serializedItem = isDynamicType\n              ? that.serializeMixedResource(\n                  type,\n                  arrayData[i],\n                  included,\n                  extraData,\n                  overrideSchemaOptions\n                )\n              : that.serializeResource(\n                  type,\n                  arrayData[i],\n                  options,\n                  included,\n                  extraData,\n                  overrideSchemaOptions\n                );\n\n            if (serializedItem !== null) {\n              serializedData.push(serializedItem);\n            }\n\n            i += 1;\n\n            return next();\n          } catch (e) {\n            return reject(e);\n          }\n        });\n      }\n\n      next();\n    }).then((result) => {\n      let dataProperty;\n\n      if (typeof result === 'undefined') {\n        dataProperty = undefined;\n      } else if (isDataArray) {\n        dataProperty = result;\n      } else {\n        dataProperty = result[0] || null;\n      }\n\n      return {\n        jsonapi: options.jsonapiObject ? { version: '1.0' } : undefined,\n        meta: this.processOptionsValues(data, extraData, options.topLevelMeta, 'extraData'),\n        links: this.processOptionsValues(data, extraData, options.topLevelLinks, 'extraData'),\n        // If the source data was an array, we just pass the serialized data array.\n        // Otherwise we try to take the first (and only) item of it or pass null.\n        data: dataProperty,\n        included: included.size ? [...included.values()] : undefined,\n      };\n    });\n  }\n\n  /**\n   * Deserialize JSON API document data.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @function JSONAPISerializer#deserialize\n   * @param {string|object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {object} data JSON API input data.\n   * @param {string} [schema='default'] resource's schema name.\n   * @returns {object} deserialized data.\n   */\n  deserialize(type, data, schema) {\n    schema = schema || 'default';\n\n    if (typeof type === 'object') {\n      type = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n    }\n\n    let deserializedData = {};\n\n    if (data.data) {\n      deserializedData = Array.isArray(data.data)\n        ? data.data.map((resource) =>\n            this.deserializeResource(type, resource, schema, data.included)\n          )\n        : this.deserializeResource(type, data.data, schema, data.included);\n    }\n\n    return deserializedData;\n  }\n\n  /**\n   * Asynchronously Deserialize JSON API document data.\n   * Input data can be a simple object or an array of objects.\n   *\n   * @function JSONAPISerializer#deserializeAsync\n   * @param {string|object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {object} data JSON API input data.\n   * @param {string} [schema='default'] resource's schema name.\n   * @returns {Promise} resolves with serialized data.\n   */\n  deserializeAsync(type, data, schema) {\n    schema = schema || 'default';\n\n    if (typeof type === 'object') {\n      type = validateDynamicTypeOptions(type);\n    } else {\n      if (!this.schemas[type]) {\n        throw new Error(`No type registered for ${type}`);\n      }\n\n      if (schema && !this.schemas[type][schema]) {\n        throw new Error(`No schema ${schema} registered for ${type}`);\n      }\n    }\n\n    const isDataArray = Array.isArray(data.data);\n    let i = 0;\n    const arrayData = isDataArray ? data.data : [data.data];\n    const deserializedData = [];\n    const that = this;\n\n    return new Promise((resolve, reject) => {\n      /**\n       * Non-blocking deserialization using the immediate queue.\n       *\n       * @see {@link https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/}\n       */\n      function next() {\n        setImmediate(() => {\n          if (i >= arrayData.length) {\n            return resolve(isDataArray ? deserializedData : deserializedData[0]);\n          }\n\n          try {\n            // Serialize a single item of the data-array.\n            const deserializedItem = that.deserializeResource(\n              type,\n              arrayData[i],\n              schema,\n              data.included\n            );\n\n            deserializedData.push(deserializedItem);\n\n            i += 1;\n\n            return next();\n          } catch (e) {\n            return reject(e);\n          }\n        });\n      }\n\n      next();\n    });\n  }\n\n  /**\n   * Serialize any error into a JSON API error document.\n   * Input data can be:\n   *  - An Error or an array of Error.\n   *  - A JSON API error object or an array of JSON API error object.\n   *\n   * @see {@link http://jsonapi.org/format/#errors}\n   * @function JSONAPISerializer#serializeError\n   * @param {Error|Error[]|object|object[]} error an Error, an array of Error, a JSON API error object, an array of JSON API error object.\n   * @returns {Promise} resolves with serialized error.\n   */\n  serializeError(error) {\n    /**\n     * An Error object enhanced with status or/and custom code properties.\n     *\n     * @typedef {Error} ErrorWithStatus\n     * @property {string} [status] status code error\n     * @property {string} [code] code error\n     */\n\n    /**\n     * @private\n     * @param {Error|ErrorWithStatus|object} err an Error, a JSON API error object or an ErrorWithStatus.\n     * @returns {object} valid JSON API error.\n     */\n    function convertToError(err) {\n      let serializedError;\n\n      if (err instanceof Error) {\n        const status = err.status || err.statusCode;\n\n        serializedError = {\n          status: status && status.toString(),\n          code: err.code,\n          title: err.title || err.constructor.name,\n          detail: err.message,\n        };\n      } else {\n        serializedError = validateError(err);\n      }\n\n      return serializedError;\n    }\n\n    return {\n      errors: Array.isArray(error)\n        ? error.map((err) => convertToError(err))\n        : [convertToError(error)],\n    };\n  }\n\n  /**\n   * Deserialize a single JSON API resource.\n   * Input data must be a simple object.\n   *\n   * @function JSONAPISerializer#deserializeResource\n   * @param {string|object} type resource's type as string or an object with a dynamic type resolved from data.\n   * @param {object} data JSON API resource data.\n   * @param {string} [schema='default'] resource's schema name.\n   * @param {Map<string, object>} included Included resources.\n   * @param {string[]} lineage resource identifiers already deserialized to prevent circular references.\n   * @returns {object} deserialized data.\n   */\n  deserializeResource(type, data, schema = 'default', included, lineage = []) {\n    if (typeof type === 'object') {\n      type = typeof type.type === 'function' ? type.type(data) : get(data, type.type);\n    }\n\n    if (!type) {\n      throw new Error(`No type can be resolved from data: ${JSON.stringify(data)}`);\n    }\n\n    if (!this.schemas[type]) {\n      throw new Error(`No type registered for ${type}`);\n    }\n\n    const options = this.schemas[type][schema];\n\n    let deserializedData = {};\n    deserializedData[options.id] = data.id || undefined;\n\n    if (data.attributes && options.whitelistOnDeserialize.length) {\n      data.attributes = pick(data.attributes, options.whitelistOnDeserialize);\n    }\n\n    if (data.attributes && options.blacklistOnDeserialize.length) {\n      data.attributes = omit(data.attributes, options.blacklistOnDeserialize);\n    }\n\n    Object.assign(deserializedData, data.attributes);\n\n    // Deserialize relationships\n    if (data.relationships) {\n      Object.keys(data.relationships).forEach((relationshipProperty) => {\n        const relationship = data.relationships[relationshipProperty];\n\n        const relationshipKey = options.unconvertCase\n          ? this._convertCase(relationshipProperty, options.unconvertCase)\n          : relationshipProperty;\n\n        const relationshipOptions = options.relationships[relationshipKey];\n\n        const deserializeFunction = (relationshipData) => {\n          if (relationshipOptions && relationshipOptions.deserialize) {\n            return relationshipOptions.deserialize(relationshipData);\n          }\n          return relationshipData.id;\n        };\n\n        if (relationship.data !== undefined) {\n          if (relationship.data === null) {\n            // null data\n            set(\n              deserializedData,\n              (relationshipOptions && relationshipOptions.alternativeKey) || relationshipKey,\n              null\n            );\n          } else {\n            if ((relationshipOptions && relationshipOptions.alternativeKey) || !included) {\n              set(\n                deserializedData,\n                (relationshipOptions && relationshipOptions.alternativeKey) || relationshipKey,\n                Array.isArray(relationship.data)\n                  ? relationship.data.map((d) => deserializeFunction(d))\n                  : deserializeFunction(relationship.data)\n              );\n            }\n\n            if (included) {\n              const deserializeIncludedRelationship = (relationshipData) => {\n                const lineageCopy = [...lineage];\n                // Prevent circular relationships\n                const lineageKey = `${relationshipData.type}-${relationshipData.id}`;\n                const isCircular = lineageCopy.includes(lineageKey);\n\n                if (isCircular) {\n                  return deserializeFunction(relationshipData);\n                }\n\n                lineageCopy.push(lineageKey);\n                return this.deserializeIncluded(\n                  relationshipData.type,\n                  relationshipData.id,\n                  relationshipOptions,\n                  included,\n                  lineageCopy\n                );\n              };\n\n              set(\n                deserializedData,\n                relationshipKey,\n                Array.isArray(relationship.data)\n                  ? relationship.data.map((d) => deserializeIncludedRelationship(d))\n                  : deserializeIncludedRelationship(relationship.data)\n              );\n            }\n          }\n        }\n      });\n    }\n\n    if (options.unconvertCase) {\n      deserializedData = this._convertCase(deserializedData, options.unconvertCase);\n    }\n\n    if (data.links) {\n      deserializedData.links = data.links;\n    }\n\n    if (data.meta) {\n      deserializedData.meta = data.meta;\n    }\n\n    if (options.afterDeserialize) {\n      return options.afterDeserialize(deserializedData);\n    }\n\n    return deserializedData;\n  }\n\n  deserializeIncluded(type, id, relationshipOpts, included, lineage) {\n    const includedResource = included.find(\n      (resource) => resource.type === type && resource.id === id\n    );\n\n    if (!includedResource) {\n      return id;\n    }\n\n    return this.deserializeResource(\n      type,\n      includedResource,\n      relationshipOpts.schema,\n      included,\n      lineage\n    );\n  }\n\n  /**\n   * Serialize resource objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-objects}\n   * @function JSONAPISerializer#serializeDocument\n   * @private\n   * @param {string} type resource's type.\n   * @param {object|object[]} data input data.\n   * @param {object} options resource's configuration options.\n   * @param {Map<string, object>} [included] Included resources.\n   * @param {object} [extraData] additional data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {object|object[]} serialized data.\n   */\n  serializeResource(type, data, options, included, extraData, overrideSchemaOptions = {}) {\n    if (isEmpty(data)) {\n      // Return [] or null\n      return Array.isArray(data) ? data : null;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map((d) =>\n        this.serializeResource(type, d, options, included, extraData, overrideSchemaOptions)\n      );\n    }\n\n    if (options.beforeSerialize) {\n      data = options.beforeSerialize(data);\n    }\n\n    return {\n      type,\n      id: data[options.id] ? data[options.id].toString() : undefined,\n      attributes: this.serializeAttributes(data, options),\n      relationships: this.serializeRelationships(\n        data,\n        options,\n        included,\n        extraData,\n        overrideSchemaOptions\n      ),\n      meta: this.processOptionsValues(data, extraData, options.meta),\n      links: this.processOptionsValues(data, extraData, options.links),\n    };\n  }\n\n  /**\n   * Serialize mixed resource object with a dynamic type resolved from data\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-objects}\n   * @function JSONAPISerializer#serializeMixedResource\n   * @private\n   * @param {object} typeOption a dynamic type options.\n   * @param {object|object[]} data input data.\n   * @param {Map<string, object>} [included] Included resources.\n   * @param {object} [extraData] additional data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {object|object[]} serialized data.\n   */\n  serializeMixedResource(typeOption, data, included, extraData, overrideSchemaOptions = {}) {\n    if (isEmpty(data)) {\n      // Return [] or null\n      return Array.isArray(data) ? data : null;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map((d) =>\n        this.serializeMixedResource(typeOption, d, included, extraData, overrideSchemaOptions)\n      );\n    }\n\n    // Resolve type from data (can be a string or a function deriving a type-string from each data-item)\n    const type =\n      typeof typeOption.type === 'function' ? typeOption.type(data) : get(data, typeOption.type);\n\n    if (!type) {\n      throw new Error(`No type can be resolved from data: ${JSON.stringify(data)}`);\n    }\n\n    if (!this.schemas[type]) {\n      throw new Error(`No type registered for ${type}`);\n    }\n\n    let options = this.schemas[type].default;\n    if (overrideSchemaOptions[type]) {\n      // Merge default (registered) options and extra options into new options object\n      options = { ...options, ...overrideSchemaOptions[type] };\n    }\n\n    return this.serializeResource(type, data, options, included, extraData, overrideSchemaOptions);\n  }\n\n  /**\n   * Serialize 'attributes' key of resource objects: an attributes object representing some of the resource's data.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-attributes}\n   * @function JSONAPISerializer#serializeAttributes\n   * @private\n   * @param {object|object[]} data input data.\n   * @param {object} options resource's configuration options.\n   * @returns {object} serialized attributes.\n   */\n  serializeAttributes(data, options) {\n    if (options.whitelist && options.whitelist.length) {\n      data = pick(data, options.whitelist);\n    }\n\n    // Support alternativeKey options for relationships\n    const alternativeKeys = [];\n    Object.keys(options.relationships).forEach((key) => {\n      const rOptions = options.relationships[key];\n      if (rOptions.alternativeKey) {\n        alternativeKeys.push(rOptions.alternativeKey);\n      }\n    });\n\n    // Remove unwanted keys\n    let serializedAttributes = omit(data, [\n      options.id,\n      ...Object.keys(options.relationships),\n      ...alternativeKeys,\n      ...options.blacklist,\n    ]);\n\n    if (options.convertCase) {\n      serializedAttributes = this._convertCase(serializedAttributes, options.convertCase);\n    }\n\n    return Object.keys(serializedAttributes).length ? serializedAttributes : undefined;\n  }\n\n  /**\n   * Serialize 'relationships' key of resource objects: a relationships object describing relationships between the resource and other JSON API resources.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-relationships}\n   * @function JSONAPISerializer#serializeRelationships\n   * @private\n   * @param {object|object[]} data input data.\n   * @param {object} options resource's configuration options.\n   * @param {Map<string, object>} [included]  Included resources.\n   * @param {object} [extraData] additional data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {object} serialized relationships.\n   */\n  serializeRelationships(data, options, included, extraData, overrideSchemaOptions = {}) {\n    const serializedRelationships = {};\n\n    Object.keys(options.relationships).forEach((relationship) => {\n      const relationshipOptions = options.relationships[relationship];\n\n      // Support alternativeKey options for relationships\n      let relationshipKey = relationship;\n      if (!data[relationship] && relationshipOptions.alternativeKey) {\n        relationshipKey = relationshipOptions.alternativeKey;\n      }\n\n      const serializeRelationship = {\n        links: this.processOptionsValues(data, extraData, relationshipOptions.links),\n        meta: this.processOptionsValues(data, extraData, relationshipOptions.meta),\n        data: this.serializeRelationship(\n          relationshipOptions.type,\n          relationshipOptions.schema,\n          get(data, relationshipKey),\n          included,\n          data,\n          extraData,\n          overrideSchemaOptions\n        ),\n      };\n\n      if (\n        serializeRelationship.data !== undefined ||\n        serializeRelationship.links !== undefined ||\n        serializeRelationship.meta !== undefined\n      ) {\n        // Convert case\n        relationship = options.convertCase\n          ? this._convertCase(relationship, options.convertCase)\n          : relationship;\n\n        serializedRelationships[relationship] = serializeRelationship;\n      }\n    });\n\n    return Object.keys(serializedRelationships).length ? serializedRelationships : undefined;\n  }\n\n  /**\n   * Serialize 'data' key of relationship's resource objects.\n   *\n   * @see {@link http://jsonapi.org/format/#document-resource-object-linkage}\n   * @function JSONAPISerializer#serializeRelationship\n   * @private\n   * @param {string|Function} rType the relationship's type.\n   * @param {string} rSchema the relationship's schema\n   * @param {object|object[]} rData relationship's data.\n   * @param {Map<string, object>} [included] Included resources.\n   * @param {object} [data] the entire resource's data.\n   * @param {object} [extraData] additional data.\n   * @param {object} [overrideSchemaOptions=] additional schema options, a map of types with options to override\n   * @returns {object|object[]} serialized relationship data.\n   */\n  serializeRelationship(\n    rType,\n    rSchema,\n    rData,\n    included,\n    data,\n    extraData,\n    overrideSchemaOptions = {}\n  ) {\n    included = included || new Map();\n    const schema = rSchema || 'default';\n\n    // No relationship data\n    if (rData === undefined || rData === null) {\n      return rData;\n    }\n\n    if (typeof rData === 'object' && isEmpty(rData)) {\n      // Return [] or null\n      return Array.isArray(rData) ? [] : null;\n    }\n\n    if (Array.isArray(rData)) {\n      return rData.map((d) =>\n        this.serializeRelationship(\n          rType,\n          schema,\n          d,\n          included,\n          data,\n          extraData,\n          overrideSchemaOptions\n        )\n      );\n    }\n\n    // Resolve relationship type\n    const type = typeof rType === 'function' ? rType(rData, data) : rType;\n\n    if (!type) {\n      throw new Error(`No type can be resolved from relationship's data: ${JSON.stringify(rData)}`);\n    }\n\n    if (!this.schemas[type]) {\n      throw new Error(`No type registered for \"${type}\"`);\n    }\n\n    if (!this.schemas[type][schema]) {\n      throw new Error(`No schema \"${schema}\" registered for type \"${type}\"`);\n    }\n\n    let rOptions = this.schemas[type][schema];\n\n    if (overrideSchemaOptions[type]) {\n      // Merge default (registered) options and extra options into new options object\n      rOptions = { ...rOptions, ...overrideSchemaOptions[type] };\n    }\n\n    const serializedRelationship = { type };\n\n    // Support for unpopulated relationships (an id, or array of ids)\n    if (!isObjectLike(rData)) {\n      serializedRelationship.id = rData.toString();\n    } else {\n      const serializedIncluded = this.serializeResource(\n        type,\n        rData,\n        rOptions,\n        included,\n        extraData,\n        overrideSchemaOptions\n      );\n\n      serializedRelationship.id = serializedIncluded.id;\n      const identifier = `${type}-${serializedRelationship.id}`;\n\n      // Not include relationship object which only contains an id\n      if (serializedIncluded.attributes && Object.keys(serializedIncluded.attributes).length) {\n        // Merge relationships data if already included\n        if (included.has(identifier)) {\n          const alreadyIncluded = included.get(identifier);\n\n          if (serializedIncluded.relationships) {\n            alreadyIncluded.relationships = {\n              ...alreadyIncluded.relationships,\n              ...serializedIncluded.relationships,\n            };\n            included.set(identifier, alreadyIncluded);\n          }\n        } else {\n          included.set(identifier, serializedIncluded);\n        }\n      }\n    }\n    return serializedRelationship;\n  }\n\n  /**\n   * Process options values.\n   * Allows options to be an object or a function with 1 or 2 arguments\n   *\n   * @function JSONAPISerializer#processOptionsValues\n   * @private\n   * @param {object} data data passed to functions options.\n   * @param {object} extraData additional data passed to functions options.\n   * @param {object} options configuration options.\n   * @param {string} [fallbackModeIfOneArg] fallback mode if only one argument is passed to function.\n   * Avoid breaking changes with issue https://github.com/danivek/json-api-serializer/issues/27.\n   * @returns {object} processed options.\n   */\n  processOptionsValues(data, extraData, options, fallbackModeIfOneArg) {\n    let processedOptions = {};\n    if (options && typeof options === 'function') {\n      // Backward compatible with functions with one 'extraData' argument\n      processedOptions =\n        fallbackModeIfOneArg === 'extraData' && options.length === 1\n          ? options(extraData)\n          : options(data, extraData);\n    } else {\n      Object.keys(options).forEach((key) => {\n        let processedValue = {};\n        if (options[key] && typeof options[key] === 'function') {\n          // Backward compatible with functions with one 'extraData' argument\n          processedValue =\n            fallbackModeIfOneArg === 'extraData' && options[key].length === 1\n              ? options[key](extraData)\n              : options[key](data, extraData);\n        } else {\n          processedValue = options[key];\n        }\n        Object.assign(processedOptions, { [key]: processedValue });\n      });\n    }\n\n    return processedOptions && Object.keys(processedOptions).length ? processedOptions : undefined;\n  }\n\n  /**\n   * Recursively convert object keys case\n   *\n   * @function JSONAPISerializer#_convertCase\n   * @private\n   * @param {object|object[]|string} data to convert\n   * @param {string} convertCaseOptions can be snake_case', 'kebab-case' or 'camelCase' format.\n   * @returns {object} Object with it's keys converted as per the convertCaseOptions\n   */\n  _convertCase(data, convertCaseOptions) {\n    if (Array.isArray(data)) {\n      return data.map((item) => {\n        if (item && (Array.isArray(item) || isPlainObject(item))) {\n          return this._convertCase(item, convertCaseOptions);\n        }\n        return item;\n      });\n    }\n\n    if (isPlainObject(data)) {\n      return transform(\n        data,\n        (result, value, key) => {\n          let converted;\n          if (value && (Array.isArray(value) || isPlainObject(value))) {\n            converted = this._convertCase(value, convertCaseOptions);\n          } else {\n            converted = value;\n          }\n\n          result[this._convertCase(key, convertCaseOptions)] = converted;\n          return result;\n        },\n        {}\n      );\n    }\n\n    if (typeof data === 'string') {\n      let converted;\n\n      switch (convertCaseOptions) {\n        case 'snake_case':\n          converted = this.convertCaseMap.snakeCase.get(data);\n          if (!converted) {\n            converted = toSnakeCase(data);\n            this.convertCaseMap.snakeCase.set(data, converted);\n          }\n          break;\n        case 'kebab-case':\n          converted = this.convertCaseMap.kebabCase.get(data);\n          if (!converted) {\n            converted = toKebabCase(data);\n            this.convertCaseMap.kebabCase.set(data, converted);\n          }\n          break;\n        case 'camelCase':\n          converted = this.convertCaseMap.camelCase.get(data);\n          if (!converted) {\n            converted = toCamelCase(data);\n            this.convertCaseMap.camelCase.set(data, converted);\n          }\n          break;\n        default: // Do nothing\n      }\n\n      return converted;\n    }\n\n    return data;\n  }\n};\n"],"names":["global","undefined","setImmediate","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","document","attachTo","Object","getPrototypeOf","setTimeout","toString","call","process","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","event","data","port2","createElement","documentElement","script","onreadystatechange","removeChild","appendChild","Math","random","source","indexOf","slice","length","addEventListener","attachEvent","callback","Function","args","Array","arguments","i","task","clearImmediate","apply","run","self","this","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reEscapeChar","reIsHostCtor","reIsUint","freeGlobal","_typeof","freeSelf","root","uid","arrayProto","prototype","funcProto","objectProto","coreJsData","maskSrcKey","exec","keys","IE_PROTO","funcToString","hasOwnProperty","objectToString","reIsNative","RegExp","replace","Symbol","splice","Map","getNative","nativeCreate","symbolProto","symbolToString","Hash","entries","index","clear","entry","set","ListCache","MapCache","assignValue","object","key","value","objValue","eq","assocIndexOf","array","baseIsNative","isObject","func","tag","isFunction","result","e","isHostObject","test","toSource","baseSet","path","customizer","isArray","type","isSymbol","isKey","stringToPath","castPath","lastIndex","nested","toKey","newValue","isIndex","getMapData","map","__data__","getValue","has","get","pop","push","memoize","string","baseToString","match","number","quote","resolver","TypeError","memoized","cache","Cache","other","isObjectLike","Node","previous","next","obj","defaultValue","String","split","filter","Boolean","reduce","res","pick","arr","acc","curr","isEmpty","val","omit","k","includes","isPlainObject","constructor","transform","fn","a","toKebabCase","str","x","toLowerCase","join","toSnakeCase","toCamelCase","s","toUpperCase","LRU","capacity","Infinity","head","tail","node","_moveFirst","id","_removeLast","_add","_remove","require$$1","validateOptions","options","blacklist","whitelist","links","relationships","topLevelLinks","topLevelMeta","meta","blacklistOnDeserialize","whitelistOnDeserialize","jsonapiObject","Error","convertCase","unconvertCase","beforeSerialize","afterDeserialize","forEach","schema","alternativeKey","deserialize","validateDynamicTypeOptions","validateError","err","status","code","title","detail","error","linksObj","href","isValidLink","sourceObj","pointer","parameter","isValidSource","opts","schemas","convertCaseCacheSize","convertCaseMap","camelCase","kebabCase","snakeCase","extraData","excludeData","overrideSchemaOptions","included","isDynamicType","dataProperty","overrideType","serializeMixedResource","serializeResource","jsonapi","version","processOptionsValues","size","values","isDataArray","arrayData","serializedData","that","Promise","resolve","reject","serializedItem","then","_this","deserializedData","resource","_this2","deserializeResource","deserializedItem","convertToError","serializedError","statusCode","name","message","errors","lineage","JSON","stringify","attributes","assign","relationshipProperty","relationship","relationshipKey","_this3","_convertCase","relationshipOptions","deserializeFunction","relationshipData","d","deserializeIncludedRelationship","lineageCopy","lineageKey","deserializeIncluded","relationshipOpts","includedResource","find","_this4","serializeAttributes","serializeRelationships","typeOption","_this5","alternativeKeys","rOptions","serializedAttributes","serializedRelationships","serializeRelationship","_this6","rType","rSchema","rData","_this7","serializedRelationship","serializedIncluded","identifier","alreadyIncluded","fallbackModeIfOneArg","processedOptions","processedValue","convertCaseOptions","item","_this8","converted"],"mappings":"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"}